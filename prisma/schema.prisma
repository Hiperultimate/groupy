// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model Example {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// Bit by bit additing functionality to Groupy models as more functionality is required
model User {
    id            String    @id @default(cuid())
    name          String
    email         String    @unique
    password      String   
    dateOfBirth   DateTime  
    atTag         String    @unique
    description   String?
    tags          Tag[]
    posts         Post[]
    emailVerified DateTime?
    image         String? 
}

model Tag {
    id        String   @id @default(uuid())
    name      String   @unique    
    users     User[]
    onPost    Post     @relation(fields: [tagId], references: [id])
    tagId     String
}

model Post {
  id        String      @id @default(uuid())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  content   String
  image     String?
  tags      Tag[]
  author    User        @relation(fields: [authorId], references: [id])
  authorId  String
  comments  Comment[] 
}

model Comment {
  id        String       @id @default(uuid())
  content   String
  post      Post         @relation(fields: [postId], references: [id])
  postId    String
}

